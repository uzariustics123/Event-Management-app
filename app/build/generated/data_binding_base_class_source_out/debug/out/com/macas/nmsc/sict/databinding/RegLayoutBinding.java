// Generated by view binder compiler. Do not edit!
package com.macas.nmsc.sict.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.macas.nmsc.sict.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RegLayoutBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageButton btClose;

  @NonNull
  public final TextInputEditText cnfrmpassword;

  @NonNull
  public final CoordinatorLayout coordinator;

  @NonNull
  public final TextInputEditText email;

  @NonNull
  public final TextView errormsg;

  @NonNull
  public final EditText firstname;

  @NonNull
  public final TextView greetxt;

  @NonNull
  public final TextInputEditText lastname;

  @NonNull
  public final LottieAnimationView mlottie;

  @NonNull
  public final EditText name;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final TextInputEditText password;

  @NonNull
  public final ExtendedFloatingActionButton signupbtn;

  private RegLayoutBinding(@NonNull CoordinatorLayout rootView, @NonNull ImageButton btClose,
      @NonNull TextInputEditText cnfrmpassword, @NonNull CoordinatorLayout coordinator,
      @NonNull TextInputEditText email, @NonNull TextView errormsg, @NonNull EditText firstname,
      @NonNull TextView greetxt, @NonNull TextInputEditText lastname,
      @NonNull LottieAnimationView mlottie, @NonNull EditText name,
      @NonNull NestedScrollView nestedScrollView, @NonNull TextInputEditText password,
      @NonNull ExtendedFloatingActionButton signupbtn) {
    this.rootView = rootView;
    this.btClose = btClose;
    this.cnfrmpassword = cnfrmpassword;
    this.coordinator = coordinator;
    this.email = email;
    this.errormsg = errormsg;
    this.firstname = firstname;
    this.greetxt = greetxt;
    this.lastname = lastname;
    this.mlottie = mlottie;
    this.name = name;
    this.nestedScrollView = nestedScrollView;
    this.password = password;
    this.signupbtn = signupbtn;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RegLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RegLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reg_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RegLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_close;
      ImageButton btClose = ViewBindings.findChildViewById(rootView, id);
      if (btClose == null) {
        break missingId;
      }

      id = R.id.cnfrmpassword;
      TextInputEditText cnfrmpassword = ViewBindings.findChildViewById(rootView, id);
      if (cnfrmpassword == null) {
        break missingId;
      }

      CoordinatorLayout coordinator = (CoordinatorLayout) rootView;

      id = R.id.email;
      TextInputEditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.errormsg;
      TextView errormsg = ViewBindings.findChildViewById(rootView, id);
      if (errormsg == null) {
        break missingId;
      }

      id = R.id.firstname;
      EditText firstname = ViewBindings.findChildViewById(rootView, id);
      if (firstname == null) {
        break missingId;
      }

      id = R.id.greetxt;
      TextView greetxt = ViewBindings.findChildViewById(rootView, id);
      if (greetxt == null) {
        break missingId;
      }

      id = R.id.lastname;
      TextInputEditText lastname = ViewBindings.findChildViewById(rootView, id);
      if (lastname == null) {
        break missingId;
      }

      id = R.id.mlottie;
      LottieAnimationView mlottie = ViewBindings.findChildViewById(rootView, id);
      if (mlottie == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.nested_scroll_view;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.password;
      TextInputEditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.signupbtn;
      ExtendedFloatingActionButton signupbtn = ViewBindings.findChildViewById(rootView, id);
      if (signupbtn == null) {
        break missingId;
      }

      return new RegLayoutBinding((CoordinatorLayout) rootView, btClose, cnfrmpassword, coordinator,
          email, errormsg, firstname, greetxt, lastname, mlottie, name, nestedScrollView, password,
          signupbtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
