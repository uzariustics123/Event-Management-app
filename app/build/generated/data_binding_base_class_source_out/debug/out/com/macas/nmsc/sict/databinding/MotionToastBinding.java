// Generated by view binder compiler. Do not edit!
package com.macas.nmsc.sict.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.macas.nmsc.sict.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MotionToastBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View colorView;

  @NonNull
  public final LinearLayout customTextView;

  @NonNull
  public final TextView customToastDescription;

  @NonNull
  public final ImageView customToastImage;

  @NonNull
  public final TextView customToastText;

  @NonNull
  public final RelativeLayout motionToastView;

  private MotionToastBinding(@NonNull RelativeLayout rootView, @NonNull View colorView,
      @NonNull LinearLayout customTextView, @NonNull TextView customToastDescription,
      @NonNull ImageView customToastImage, @NonNull TextView customToastText,
      @NonNull RelativeLayout motionToastView) {
    this.rootView = rootView;
    this.colorView = colorView;
    this.customTextView = customTextView;
    this.customToastDescription = customToastDescription;
    this.customToastImage = customToastImage;
    this.customToastText = customToastText;
    this.motionToastView = motionToastView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MotionToastBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MotionToastBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.motion_toast, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MotionToastBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.colorView;
      View colorView = ViewBindings.findChildViewById(rootView, id);
      if (colorView == null) {
        break missingId;
      }

      id = R.id.custom_text_view;
      LinearLayout customTextView = ViewBindings.findChildViewById(rootView, id);
      if (customTextView == null) {
        break missingId;
      }

      id = R.id.custom_toast_description;
      TextView customToastDescription = ViewBindings.findChildViewById(rootView, id);
      if (customToastDescription == null) {
        break missingId;
      }

      id = R.id.custom_toast_image;
      ImageView customToastImage = ViewBindings.findChildViewById(rootView, id);
      if (customToastImage == null) {
        break missingId;
      }

      id = R.id.custom_toast_text;
      TextView customToastText = ViewBindings.findChildViewById(rootView, id);
      if (customToastText == null) {
        break missingId;
      }

      RelativeLayout motionToastView = (RelativeLayout) rootView;

      return new MotionToastBinding((RelativeLayout) rootView, colorView, customTextView,
          customToastDescription, customToastImage, customToastText, motionToastView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
